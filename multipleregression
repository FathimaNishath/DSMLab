------------LINEAR REGRESSION------------

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import sklearn

from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error,r2_score
from sklearn import linear_model 
from sklearn.datasets import load_iris

x,y=load_iris(return_X_y=True)
x=x[:,2]

x_train,X_test,y_train,y_test=train_test_split(x,y,test_size=.20,random_state=42)


x_train=np.array(x_train).reshape(-1,1)
y_train=np.array(y_train).reshape(-1,1)
X_test=np.array(X_test).reshape(-1,1)

classifier=linear_model.LinearRegression()
classifier.fit(x_train,y_train)
y_pred=classifier.predict(X_test)

mean_squared_error(y_test,y_pred)

plt.scatter(X_test,y_test,color='black')
plt.plot(X_test,y_test,color='blue')
plt.show()

---------MULTI REGRESSION-----------

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import sklearn

from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error,r2_score
from sklearn import linear_model 
from sklearn.datasets import load_iris

x,y=load_iris(return_X_y=True)
x=x[:,0:2]

x_train,X_test,y_train,y_test=train_test_split(x,y,test_size=.20,random_state=0)

classifier=linear_model.LinearRegression()
classifier.fit(x_train,y_train)
y_pred=classifier.predict(X_test)
r2_score=(y_test,y_pred)
mean_squared_error(y_test,y_pred)

plt.scatter(X_test[:,0],y_test,color='black')
plt.plot(X_test[:,0],y_pred,color='red')
plt.show()
